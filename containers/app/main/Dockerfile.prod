# Stage 1: Deps

# Slightly modified version of next.js's with-docker Dockerfile
# https://github.com/vercel/next.js/blob/canary/examples/with-docker
# See also https://www.reddit.com/r/nextjs/comments/ungq2f/docker_error_could_not_find_a_production_build_in/
# See also "Your DOCKER NextJS IMAGE SUCKS! Optimize it! | HOW TO" at https://www.youtube.com/watch?v=dtLpWR98HfE

ARG IMAGE_REPOSITORY
# Install dependencies only when needed
FROM ${IMAGE_REPOSITORY}/node:17-alpine AS deps

# See https://stackoverflow.com/questions/29261811/use-docker-compose-env-variable-in-dockerbuild-file
ARG PROXY_USER
ARG PROXY_PASSWORD
ARG PROXY_FQDN
ARG PROXY_PORT

ENV HTTP_PROXY="http://${PROXY_USER}:${PROXY_PASSWORD}@${PROXY_FQDN}:${PROXY_PORT}"
ENV HTTPS_PROXY="http://${PROXY_USER}:${PROXY_PASSWORD}@${PROXY_FQDN}:${PROXY_PORT}"

# Next.js collects completely anonymous telemetry data about general usage.
# Learn more here: https://nextjs.org/telemetry
# Uncomment the following line in case you want to disable telemetry during the build.
ENV NEXT_TELEMETRY_DISABLED 1

# Make app directory
RUN mkdir -p /home/app/ && chown -R node:node /home/app

# Set working directory
WORKDIR /home/app

# Add app
COPY --chown=node:node . .

# Set user
USER node

# Install app
RUN yarn install --frozen-lockfile

# Build app
RUN yarn build

# Expose port
EXPOSE 3020

# Start app
CMD ["yarn", "start"]
